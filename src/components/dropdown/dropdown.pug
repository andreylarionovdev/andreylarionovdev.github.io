mixin dropdown(options)
  -
    const {
      value = 'Выберите',
      rows = [],
      isExpanded,
      isEdited,
      isEmpty,
      withHiddenButtons,
    } = options || {};

  - const blockModifiers = [];

  if isExpanded
    - blockModifiers.push('expanded');
  if isEdited
    - blockModifiers.push('edited');
  if isEmpty
    - blockModifiers.push('empty');
  if withHiddenButtons
    - blockModifiers.push('with-hidden-buttons');

  - const f = require('../../utils/functions.js');
  - const b = 'dropdown';
  - const js = 'js';

  div(class=f.bem({b, m: blockModifiers, js}))
    input(class=f.bem({b, e: 'input', js}) type='text' value=value)
    div(class=f.bem({b, e: 'selection', js}))= value
    button.dropdown__toggle-button.js-dropdown__toggle-button.material-icons(type='button')= 'keyboard_arrow_down'
    if rows.length > 0
      ul(class=f.bem({b, e: 'menu', js}))
        each row in rows
          li(class=f.bem({b, e: 'menu-item', js}))
            .dropdown__item-name= row.text
            .dropdown__count-buttons
              - const decButtonModifiers = row.count < 1 ? ['disabled'] : [];
              button(class=f.bem({b, e: 'change-count-button', m: decButtonModifiers, js}) type='button' data-operator='-')= '-'
              span(class=f.bem({b, e: 'count', js}))= row.count
              button(class=f.bem({b, e: 'change-count-button', js}) type='button' data-operator='+')= '+'
        li.dropdown__footer-buttons
          span(class=f.bem({b, e: 'clear-button', js}))
            +button({
              theme: 'textual',
              color: 'gray',
              type: 'button',
              caption: 'очистить',
            })
          span(class=f.bem({b, e: 'apply-button', js}))
            +button({
              theme: 'textual',
              type: 'button',
              caption: 'применить',
            })