mixin dropdown(options)
  -
    const {
      id,
      value = 'Выберите',
      zIndex = 9,
      rows = [],
      isExpanded,
      isEdited,
      isEmpty,
    } = options || {};

  - const blockModifiers = [];

  if isExpanded
    - blockModifiers.push('expanded');
  if isEdited
    - blockModifiers.push('edited');
  if isEmpty
    - blockModifiers.push('empty');

  - const f = require('../../utils/functions.js');
  - const b = 'dropdown';
  - const js = 'js';

  div(id=id class=f.bem({b, m: blockModifiers, js}))
    label(class=f.bem({b, e: 'toggle', js}))
      span(class=f.bem({b, e: 'text', js}))= value
      button.dropdown__arrow-button.material-icons= 'keyboard_arrow_down'
      input(class=f.bem({b, e: 'data-input', js}) type='text' value=value)
    if rows.length > 0
      ul(class=f.bem({b, e: 'menu', js}) style={'z-index': zIndex})
        each row in rows
          li(class=f.bem({b, e: 'menu-item', js}))
            span.dropdown__item-name= row.text
            span.dropdown__count-buttons
              - const decModifiers = row.count < 1 ? 'disabled': '';
              span(class=f.bem({b, e: 'change-count-btn', m: decModifiers, js}) data-op='-')= '-'
              span(class=f.bem({b, e: 'count', js}))= row.count
              span(class=f.bem({b, e: 'change-count-btn', js}) data-op='+')= '+'
        li.dropdown__footer-buttons
          span(class=f.bem({b, e: 'clear-button', js}))
            +button({
              theme: 'textual',
              type: 'button',
              caption: 'очистить',
              isHovered: true,
            })
          span(class=f.bem({b, e: 'apply-button', js}))
            +button({
              theme: 'textual',
              type: 'button',
              caption: 'применить',
            })